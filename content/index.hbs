---
isHomepage: true
---

{{! ----------------------------------------------------------------- }}

<div class="explanation-lead">
  <p>Huebee is a JavaScript library for creating user-centric color pickers. Most color pickers are machine-centric. They aim to display and provide controls for every possible color (~17M). Huebee displays a limited set of colors (~200) so users can make clear decisions and select a color with a single click.</p>
</div>

{{! ----------------------------------------------------------------- }}

<h2>Install</h2>

{{! ----------------------------------------------------------------- }}

<h3>Download</h3>

<ul>
  <li>
    CSS:
    <ul>
      <li><a href="https://unpkg.com/huebee@1/dist/huebee.min.css">huebee.min.css</a> minified, or</li>
      <li><a href="https://unpkg.com/huebee@1/dist/huebee.css">huebee.css</a> un-minified</li>
    </ul>
  </li>
  <li>
    JavaScript:
    <ul>
      <li><a href="https://unpkg.com/huebee@1/dist/huebee.pkgd.min.js">huebee.pkgd.min.js</a> minified, or</li>
      <li><a href="https://unpkg.com/huebee@1/dist/huebee.pkgd.js">huebee.pkgd.js</a> un-minified</li>
    </ul>
  </li>
</ul>

{{! ----------------------------------------------------------------- }}

<h3>CDN</h3>

<p>Link directly to Huebee files on <a href="https://unpkg.com/">unpkg</a>.</p>

``` html
<link rel="stylesheet" href="https://unpkg.com/huebee@1/dist/huebee.min.css">
<!-- or -->
<link rel="stylesheet" href="https://unpkg.com/huebee@1/dist/huebee.css">
```

``` html
<script src="https://unpkg.com/huebee@1/dist/huebee.pkgd.min.js"></script>
<!-- or -->
<script src="https://unpkg.com/huebee@1/dist/huebee.pkgd.js"></script>
```

{{! ----------------------------------------------------------------- }}

<h3>Package managers</h3>

<p>Install with npm: <code>npm install huebee</code></p>

<p>Install with Bower: <code>bower install huebee --save</code></p>


{{! ----------------------------------------------------------------- }}

<h2>License</h2>

{{! ----------------------------------------------------------------- }}

<h3>Commercial license</h3>

<p>If you want to use Huebee to develop commercial sites, themes, projects, and applications, the Commercial license is the appropriate license. With this option, your source code is kept proprietary. <a href="license.html">Read more about Huebee commercial licensing</a>.</p>

<p>Once purchased, you&rsquo;ll receive a commercial license PDF and be all set to use Huebee in your commercial applications.</p>

<div class="buy-button-trio">
  {{#licenses.developer}}
    {{> buy-button}}
  {{/licenses.developer}}

  {{#licenses.team}}
    {{> buy-button}}
  {{/licenses.team}}

  {{#licenses.organization}}
    {{> buy-button}}
  {{/licenses.organization}}
</div>

{{! ----------------------------------------------------------------- }}

<h3>Open source license</h3>

<p>If you are creating an open source application under a license compatible with the <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU GPL license v3</a>, you may use Huebee under the terms of the GPLv3. <a href="license.html">Read more about Huebee open source licensing</a>.</p>

<h2>Getting started</h2>

<p>Include the Huebee <code>.css</code> and <code>.js</code> files in your site.</p>

``` html
<link rel="stylesheet" href="/path/to/huebee.css" media="screen">
```

``` html
<script src="/path/to/huebee.pkgd.min.js"></script>
```

<p>Huebee works on an anchor element.</p>

``` html
<!-- use inputs so users can set colors with text -->
<input class="color-input" value="#F80" />

<!-- anchors can be buttons -->
<button class="color-button">Select color</button>

<!-- anchors can be any element -->
<span class="current-color">Current color</span>
```

<p>There are several ways to initialize Huebee.</p>

{{! ----------------------------------------------------------------- }}

<h3>Initialize with vanilla JavaScript</h3>

<p>You can use Huebee with vanilla JS: <code><span class="keyword">new</span> Huebee( elem )</code>. The <code>Huebee()</code> constructor accepts two arguments: the anchor element and an options object.</p>

``` js
// initialize on single element with selector string
var hueb = new Huebee( '.color-input', {
  // options
  notation: 'hex',
  saturations: 2,
});
```

``` js
// initialize on single element with element
var elem = document.querySelector('.color-input');
var hueb = new Huebee( elem, {
  // options
});
```

``` js
// initials on multiple elements with loop
var elems = document.querySelectorAll('.color-input');
for ( var i=0; i < elems.length; i++ ) {
  var elem = elems[i];
  var hueb = new Huebee( elem, {
    // options
  });
}
```

{{! ----------------------------------------------------------------- }}

<h3>Initialize with jQuery</h3>

``` js
// initialize on single element with jQuery
var elem = $('.color-input')[0];
var hueb = new Huebee( elem, {
  // options
});
```

``` js
// initialize on multiple elements with jQuery
$('.color-input').each( function( i, input ) {
  var hueb = new Huebee( input, {
    // options
  });
});
```

{{! ----------------------------------------------------------------- }}

<h3>Initialize with HTML</h3>

<p>You can initialize Huebee in HTML, without writing any JavaScript. Add <code>data-huebee</code> attribute to an element.</p>

``` html
<input class="color-input" data-huebee />
```

<p>Options can be set in value of <code>data-huebee</code>. Options set in HTML must be valid JSON. Keys need to be quoted, for example <code>"notation"</code>:. The <code>data-huebee</code> attribute value is set with single quotes <code>'{...}'</code>, but JSON entities use double-quotes <code>"string"</code>.</p>

``` html
<input class="color-input" data-huebee='{ "notation": "hex", "saturations": 2 }' />
```

{{! ----------------------------------------------------------------- }}

<h2>Options</h2>

<p>The demos below are opened by default with <code>staticOpen: true</code> to be easily viewable.</p>

{{! ----------------------------------------------------------------- }}

<h3>setText</h3>

<p>Sets elements&rsquo; text to color.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    // default
    // setText: true
    // set text of anchor element
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" value="#F00" data-huebee='{ "staticOpen": true }' />
  </div>
</div>

<p>Set <code>setText</code> to a selector string to set the text of multiple elements.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    setText: '.set-text-elem'
    // set text of .set-text-elem elements
    ```
    ``` html
    <div>
      <span class="swatch set-text-elem"></span>
      <span class="swatch set-text-elem"></span>
      <span class="swatch set-text-elem"></span>
    </div>
    <!-- add class to anchor to set text of anchor as well -->
    <input class="set-text-elem" />
    ```
  </div>
  <div class="duo__cell example__demo">
    {{> set-text-multiple}}
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>setBGColor</h3>

<p>Sets elements&rsquo; background color to color. Also sets text color so text is visible with light and  dark colors.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    // default
    // setBGColor: true
    // set background-color of anchor element
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" value="#F00" data-huebee='{ "setBGColor": true, "staticOpen": true }' />
  </div>
</div>

<p>Set <code>setBGColor</code> to a selector string to set the background color of multiple elements.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    setBGColor: '.set-bg-elem'
    // set text of .set-bg-elem elements
    ```
    ``` html
    <div>
      <span class="swatch set-bg-elem"></span>
      <span class="swatch set-bg-elem"></span>
      <span class="swatch set-bg-elem"></span>
    </div>
    <!-- add class to anchor to set background-color of anchor as well -->
    <input class="set-bg-elem" />
    ```
  </div>
  <div class="duo__cell example__demo">
    {{> set-bg-multiple}}
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>hues</h3>

<p>Number of hues of the color grid. Hues are slices of the color wheel â€” red, yellow, green, cyan, blue, magenta. Default <code>hues: 12</code>.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    hues: 6
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" data-huebee='{ "hues": 6, "staticOpen": true }' />
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>hue0</h3>

<p>The first hue of the color grid. Default <code>hue0: 0</code>.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    // start color grid at cool blue
    hue0: 210
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" data-huebee='{ "hue0": 210, "staticOpen": true }' />
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>shades</h3>

<p>Number of shades of colors and shades of gray between white and black. Default <code>shades: 5</code>.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    shades: 7
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" data-huebee='{ "shades": 7, "staticOpen": true }' />
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>saturations</h3>

<p>Number of sets of saturation of the color grid. <code>saturations: 3</code> will display saturations of 100%, 66%, and 33%. Default <code>saturations: 3</code></p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    saturations: 2
    // 100% saturation & 50% saturation
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" data-huebee='{ "saturations": 2, "staticOpen": true }' />
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>customColors</h3>

<p>Custom colors added to the top of the grid. Values may be any valid color value: <code>'#19F', '#E5A628', 'darkgray', 'hsl(210, 90%, 55%)'</code>.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    customColors: [ '#C25', '#E62', '#EA0', '#19F', '#333' ]
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input"
      data-huebee='{ "customColors": [ "#C25", "#E62", "#EA0", "#19F", "#333" ], "staticOpen": true }' />
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>notation</h3>

<p>Text syntax of colors values.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    // default
    // notation: 'shortHex'
    // #F00, #F80, #FF0
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" value="#F00" data-huebee='{ "staticOpen": true }' />
  </div>
</div>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    notation: 'hex'
    // #FF0000, #FF8000, #FFFF00
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" value="#FF0000" data-huebee='{ "notation": "hex", "staticOpen": true }'  />
  </div>
</div>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    notation: 'hsl'
    // hsl(0, 100%, 50%), hsl(30, 100%, 50%), hsl(60, 100%, 50%)
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" value="hsl(0, 100%, 50%)" data-huebee='{ "notation": "hsl", "staticOpen": true }' />
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>staticOpen</h3>

<p>Displays open and stays open. Default disabled <code>staticOpen: false</code>.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    // default
    // staticOpen: false
    // open on click or focus
    // close on click outside or blur
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" data-huebee />
  </div>
</div>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    staticOpen: true
    // display open and stay open
    ```
  </div>
  <div class="duo__cell example__demo">
    <input class="demo-input" data-huebee='{ "staticOpen": true }' />
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>className</h3>

<p>Class added to Huebee element. Useful for CSS, see below.</p>

``` js
className: 'custom-huebee-class'
```

{{! ----------------------------------------------------------------- }}

<h2>CSS</h2>

<p>Set the size of the color grid with by setting the size of <code>.huebee__cursor</code> in CSS. This allows you to size the color grid responsively with media queries.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` css
    /* 25px grid size */
    .huebee__cursor {
      width: 25px;
      height: 25px;
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    {{> custom-grid-size}}
  </div>
</div>



<p>Style Huebee with your own CSS. Look over <a href="https://unpkg.com/huebee@1/dist/huebee.css">huebee.css</a> to see what styles you can customize.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` css
    .huebee__container {
      top: 20px; /* position */
      background: #777;
      border: 5px solid #222;
      border-radius: 0;
    }

    .huebee__cursor {
      border: 5px solid #19F;
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    {{> static-custom-style}}
  </div>
</div>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` css
    .huebee {
      /* disable reveal/hide transition */ 
      transition: none;
    }

    .huebee__close-button {
      background: red;
    }

    .huebee__close-button__x {
      stroke-width: 2;
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    {{> dynamic-custom-style}}
  </div>
</div>

<p>Use <code>className</code> option for specificity.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` html
    <input data-huebee='{ "className": "dark-picker" }' />
    <input data-huebee='{ "className": "light-picker" }' />
    ```

    ``` css
    .dark-picker .huebee__container {
      background: #222;
    }

    .light-picker .huebee__container {
      background: #F8F8F8;
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    {{> classname-style}}
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h2>Methods</h2>

<h3>setColor</h3>

``` js
hueb.setColor('pink')
// sets Huebee color
// which in turn sets text and background colors if enabled
// and selects swatch on grid, if matched

// color may be any valid color value
hueb.setColor('transparent')
hueb.setColor('#F90')
hueb.setColor('#BADA55')
hueb.setColor('hsl(210, 90%, 50%)')
```

{{> set-color}}

<h3>open</h3>

``` js
hueb.open()
// opens Huebee
```

<h3>close</h3>

``` js
hueb.close()
// closes Huebee
```

{{! ----------------------------------------------------------------- }}

<h2>Events</h2>

``` js
hueb.on( 'change', function( color, hue, sat, lum ) {
  console.log( 'color changed to: ' + color )
})
```

{{! ----------------------------------------------------------------- }}

<h2>Properties</h2>

``` js
hueb.color // => #F00
// {String} - text color value

hueb.hue // -> 0
// {Number} - angle of hue of color, 0...360

hueb.sat // -> 1
// {Number} - saturation of color, 0...1

hueb.lum // -> 0.5
// {Number} - luminance of color, 0...1
```
